# Default values come from backbase-app.

## Global values: Local values have precedence and mergeOverwrite globals
global:
  # global.chartName configures the remote config chart name
  chartName: store

  # global.jwt sets the JWT related environment variables in the application pod.
  jwt:
    # global.jwt.enabled if true will configure the environment variables related with the JWT token secrets.
    enabled: true
    # global.jwt.existingSecret is name of external kubernetes secret containing the jwt values
    existingSecret: "backbase-env-jwt"
    # global.jwt.SIG_SECRET_KEY_fromSecret will set the variable SIG_SECRET_KEY with the value from the secret  jwt-internal-secretkey secret key.
    SIG_SECRET_KEY_fromSecret: true
    # global.jwt.EXTERNAL_SIG_SECRET_KEY_fromSecret will set the variable EXTERNAL_SIG_SECRET_KEY with the value from the jwt-external-secretkey secret key.
    EXTERNAL_SIG_SECRET_KEY_fromSecret: true
    # global.jwt.EXTERNAL_ENC_SECRET_KEY_fromSecret will set the variable EXTERNAL_ENC_SECRET_KEY with the value from the jwt-external-enc-secretkey secret key.
    EXTERNAL_ENC_SECRET_KEY_fromSecret: true
    # global.jwt.USERCTX_KEY_fromSecret will set the variable USERCTX_KEY with the value from the userctx-key secret key.
    USERCTX_KEY_fromSecret: true

  # global.registry is used to configure the connection to the eureka registry. We do not recommend eureka for kubernetes deployments.
  registry:
    # global.registry.enabled will configure the application to run with eureka registry. This option is discouraged.
    enabled: false

  activemq:
    # global.activemq.enabled is true by default. If enabled, it will set automatically these environment variables:
    # SPRING_ACTIVEMQ_BROKER_URL, SPRING_ACTIVEMQ_USER, SPRING_ACTIVEMQ_PASSWORD
    enabled: true

  # global.database sets the Database init container health-checks and configure the deployment SPRING_DATASOURCE environment variables.
  database:
    # global.database.enabled is true by default. If enabled, it will set automatically these environment variables:
    # SPRING_DATASOURCE_URL, SPRING_DATASOURCE_USERNAME, SPRING_DATASOURCE_PASSWORD, SPRING_DATASOURCE_DRIVER_CLASS_NAME
    enabled: false

# store values configure a vanilla environment without multi-tenancy. Defaults to mysql, activemq.
store:
  # store.chartName is the name of the chart.
  chartName: "store"
  # store.replicaCount is the number of replicas for this deployment.
  replicaCount: 1
  # store.app configures metadata and images of the app to be deployed.
  app:
    metadata:
      tier: ""

    # store.app.image configures the docker image to use.
    image:
      # app.image.registry is the docker repository tag for this deployment.
      registry: "repo.backbase.com/backbase-docker-releases"
      # app.image.repository is the docker repository tag for this deployment.
      repository: "store"
      # app.image.tag is the docker image tag for this deployment.
      tag: "0.8.0"

    # store.app.resources configures the kubernetes resource requests and limits for the deployment.
    resources:
      memory:
        ram: 512
      cpu:
        minShares: 100
        maxShares: 1000

  # store.javaOpts configures the javaopts of the pod.
  javaOpts:
    # store.javaOpts.extra configures the application to load the yaml configuration from a config folder.
    extra:
      - "-Dspring.config.additional-location=/config/"

  # store.customFilesPath configures the app to load the property files.
  customFilesPath: "/config/"
  # store.customFiles contains the properties that the application needs for running.
  customFiles:
    application-kubernetes.yml: |-
      spring:
        autoconfigure: # Excludes some spring-autoconfiguration classes in order to use kubernetes native registry.
          exclude: org.springframework.cloud.function.context.config.ContextFunctionCatalogAutoConfiguration,org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration
        cloud:
          kubernetes: # Enable usage of kubernetes registry by default.
            enabled: true
            reload:
              enable: true
          loadbalancer: # Disables ribbon load balancer.
            ribbon:
              enabled: false

  # store.service allows kubernetes to expose the deployment through a service.
  service:
    # store.service.enabled if true will create a kubernetes service mapped to the application deployment.
    enabled: true
    nameOverride: store

  # store.env allows to override environment variables in the pod
  env: {}
