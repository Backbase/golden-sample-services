<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.backbase.goldensample</groupId>
        <artifactId>services</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>

    <artifactId>product</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>war</packaging>
    <name>Backbase :: product-service</name>
    
    <properties>
    	<pact.version>4.5.6</pact.version>
    </properties>

    <dependencies>
		<dependency>
			<groupId>au.com.dius.pact.provider</groupId>
			<artifactId>junit5</artifactId>
			<version>${pact.version}</version>
		</dependency>
		
		<dependency>
			<groupId>au.com.dius.pact.provider</groupId>
			<artifactId>junit5spring</artifactId>
			<version>${pact.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-webflux</artifactId>
                </exclusion>
            </exclusions>
		</dependency>
    
        <dependency>
            <groupId>com.backbase.goldensample</groupId>
            <artifactId>product-db</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.backbase.buildingblocks</groupId>
            <artifactId>api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.backbase.buildingblocks</groupId>
            <artifactId>auth-security</artifactId>
        </dependency>
        <dependency>
            <groupId>com.backbase.buildingblocks</groupId>
            <artifactId>communication</artifactId>
        </dependency>
        <dependency>
            <groupId>com.backbase.buildingblocks</groupId>
            <artifactId>events</artifactId>
        </dependency>
        <dependency>
            <groupId>com.backbase.buildingblocks</groupId>
            <artifactId>multi-tenancy</artifactId>
        </dependency>
        <dependency>
            <groupId>com.backbase.buildingblocks</groupId>
            <artifactId>multi-tenancy-liquibase</artifactId>
        </dependency>
        <dependency>
            <groupId>com.backbase.buildingblocks</groupId>
            <artifactId>persistence</artifactId>
        </dependency>
        <!-- POJO <-> Entity conversion made easy
            https://community.backbase.com/documentation/ServiceSDK/latest/service_sdk_ref_service_sdk_starter_mapping -->
        <dependency>
            <groupId>com.backbase.buildingblocks</groupId>
            <artifactId>service-sdk-starter-mapping</artifactId>
        </dependency>
        <dependency>
            <groupId>com.backbase.buildingblocks</groupId>
            <artifactId>validation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.openapitools</groupId>
            <artifactId>jackson-databind-nullable</artifactId>
        </dependency>
        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-annotations</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok-mapstruct-binding</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.backbase.buildingblocks</groupId>
            <artifactId>service-sdk-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.backbase.buildingblocks</groupId>
            <artifactId>service-sdk-archunit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>activemq-kahadb-store</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.tngtech.archunit</groupId>
            <artifactId>archunit-junit5</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>nl.jqno.equalsverifier</groupId>
            <artifactId>equalsverifier</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>mariadb</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>mssqlserver</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>mysql</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>testcontainers</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mariadb.jdbc</groupId>
            <artifactId>mariadb-java-client</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.microsoft.sqlserver</groupId>
            <artifactId>mssql-jdbc</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>com.backbase.oss</groupId>
                <artifactId>boat-maven-plugin</artifactId>
                <executions>
                    <!--          if you specs are already in repo.backbase.com bundled, you can instead download them abd generate the code from them.
                    This can break if you have repo.backbase.com under a different name in your Maven configuration.
                        <plugin>
                          <groupId>org.codehaus.mojo</groupId>
                          <artifactId>wagon-maven-plugin</artifactId>
                           <version>2.0.0</version>
                           <configuration>
                             <serverId>Backbase Artifactory Repository</serverId>
                           </configuration>
                          <executions>
                            <execution>
                              <id>download-product-api-spec</id>
                              <goals>
                                <goal>download-single</goal>
                              </goals>
                              <phase>generate-sources</phase>
                              <configuration>
                                <url>${backbase.specs.url}/payment</url>
                                <fromFile>product-service-api-v${product-service-api.version}.yaml</fromFile>
                                <toDir>${open-api-specs-dir}/payment</toDir>
                              </configuration>
                            </execution>
                            -->
                    <execution>
                        <id>bundle-service-specs</id>
                        <!-- bundles the open api specs, and sets the proper version number in the filename -->
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>bundle</goal>
                        </goals>
                        <configuration>
                            <input>${project.basedir}/../../api/product-api/src/main/resources/</input>
                            <output>${project.build.directory}/specs/</output>
                            <versionFileName>true</versionFileName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-service-api-code</id>
                        <!--            With that goal BOAT is using the following defaults
                                    <configuration>
                                      <output>${project.build.directory}/generated-sources/openapi</output>
                                      <generateSupportingFiles>true</generateSupportingFiles>
                                      <generatorName>spring</generatorName>
                                      <strictSpec>true</strictSpec>
                                      <generateApiTests>false</generateApiTests>
                                      <generateModelTests>false</generateModelTests>
                                      <inputSpec>${project.basedir}/../api/product-service-api/src/main/resources/openapi.yaml</inputSpec>
                                      <configOptions>
                                        <library>spring-boot</library>
                                        <dateLibrary>java8</dateLibrary>
                                        <interfaceOnly>true</interfaceOnly>
                                        <skipDefaultInterface>true</skipDefaultInterface>
                                        <useBeanValidation>true</useBeanValidation>
                                        <useClassLevelBeanValidation>false</useClassLevelBeanValidation>
                                        <useTags>true</useTags>
                                        <java8>true</java8>
                                        <useOptional>false</useOptional>
                                        <apiPackage>com.backbase.product.api.service.v1</apiPackage>
                                        <modelPackage>com.backbase.product.api.service.v1.model</modelPackage>
                                      </configOptions>

                                      https://github.com/Backbase/backbase-openapi-tools/blob/dev/boat-maven-plugin/src/main/java/com/backbase/oss/boat/GenerateSpringBootEmbeddedMojo.java
                        -->
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate-spring-boot-embedded</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.build.directory}/specs/product-service-api-v1.0.0.yaml</inputSpec>
                            <apiPackage>com.backbase.product.api.service.v1</apiPackage>
                            <modelPackage>com.backbase.product.api.service.v1.model</modelPackage>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-integration-api-code</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate-spring-boot-embedded</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.build.directory}/specs/product-integration-api-v1.0.0.yaml</inputSpec>
                            <apiPackage>com.backbase.product.api.integration.v1</apiPackage>
                            <modelPackage>com.backbase.product.api.service.v1.model</modelPackage>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <execution>
                        <id>assemble-api-zip</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <descriptors>
                                <descriptor>../assembly/api.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--            Using the SSDK plugin we make sure the file com.backbase.product.spring-cloud-stream.v1.properties-->
            <!--            is generated, the content is important to avoid annonymous queues for example.-->
            <!--            #-->
            <!--            #Fri Dec 11 16:38:23 CET 2020-->
            <!--            spring.cloud.stream.bindings[com.backbase.product.event.spec.v1.ProductCreatedEvent].content-type=application/json-->
            <!--            spring.cloud.stream.bindings[com.backbase.product.event.spec.v1.ProductCreatedEvent].destination=queue-destination-custom-name-->
            <!--            spring.cloud.stream.bindings[com.backbase.product.event.spec.v1.ProductCreatedEvent].group=${spring.application.name}.queue-destination-custom-name-->
            <plugin>
                <groupId>com.backbase.codegen</groupId>
                <artifactId>jsonschema-events-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>generate-events-product</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>events-generation</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <inputFile>${project.basedir}/../../api/product-api/src/main/resources/events</inputFile>
                    <outputFile>${project.build.directory}/generated-sources/events</outputFile>
                    <packageName>product</packageName>
                    <useJavaTime>true</useJavaTime>
                    <packageVersion>1</packageVersion>
                    <generatedResourcesDirectory>${project.build.directory}/generated-resources</generatedResourcesDirectory>
                    <generatedSpringFactoriesDir>${project.build.directory}/generated-spring-factories</generatedSpringFactoriesDir>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>add-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${project.build.directory}/generated-sources/openapi/src/main/java</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Attach the liquibase zip of the product-db module as an additional artifact (see also parent pom) -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-zips</id>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>${project.groupId}</groupId>
                                    <artifactId>product-db</artifactId>
                                    <version>${project.version}</version>
                                    <classifier>liquibase</classifier>
                                    <type>zip</type>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-zips</id>
                        <configuration>
                            <artifacts>
                                <artifact>
                                    <file>${project.build.directory}/dependency/product-db.zip</file>
                                    <type>zip</type>
                                    <classifier>liquibase</classifier>
                                </artifact>
                            </artifacts>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <!--  to run locally -->
        <profile>
            <id>local</id>
            <dependencies>
                <dependency>
                    <groupId>mysql</groupId>
                    <artifactId>mysql-connector-java</artifactId>
                </dependency>
            </dependencies>
        </profile>
        <!--    adding a profile with the same name that will override the drivers configuration back to the one that’s
                in the original docker-image profile in core so mvn clean install -P docker-image is invoked
                it will include the default drivers as it merges the profiles-->
        <profile>
            <id>docker-image</id>
            <dependencies>
                <dependency>
                    <groupId>com.microsoft.sqlserver</groupId>
                    <artifactId>mssql-jdbc</artifactId>
                </dependency>
                <dependency>
                    <groupId>mysql</groupId>
                    <artifactId>mysql-connector-java</artifactId>
                </dependency>
            </dependencies>
        </profile>
    </profiles>

</project>
