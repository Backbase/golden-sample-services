# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

# name: Manual workflow
# on:
#   pull_request:
#     types: [labeled]
on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: On Label
    # This job runs on Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Set up JDK 11
      - uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Set up Apache Maven Central
      - uses: actions/setup-java@v2
        with: # running setup-java again overwrites the settings.xml
          java-version: '11'
          distribution: 'adopt'
#          cache: maven
          server-id: backbase # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: MAVEN_USERNAME # env variable for username in deploy
          server-password: MAVEN_PASSWORD # env variable for token in deploy
      - name: Build and test project
#        run: mvn -B clean verify --file pom.xml
      - run: mvn --batch-mode --update-snapshots verify
        - env:
            MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
            MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
      - run: mkdir staging && cp services/product/target/*.war staging
      - uses: actions/upload-artifact@v2
        with:
          name: Package
          path: staging
#      - name: Set up Apache Maven Central
#        uses: actions/setup-java@v1
#        with: # running setup-java again overwrites the settings.xml
#          java-version: 11
#          server-id: repo-charts # Value of the distributionManagement/repository/id field of the pom.xml
#          server-username: MAVEN_USERNAME # env variable for username in deploy
#          server-password: MAVEN_PASSWORD # env variable for token in deploy
#      - name: Build and test charts module
#        run: mvn -B clean package --file charts/pom.xml
#        env:
#          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
#          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}

